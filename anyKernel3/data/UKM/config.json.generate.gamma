cat << CTAG
{
	name:GAMMA,
		elements:[
                    { STitleBar:{ 
                        title:"Info" 
                                }},
				{ SDescription:{
					description:"Gamma Control is used to alter the output levels of a device LCD display."
				}},
				{ SSpacer:{
						height: 1
				    	}},
				{ SLiveLabel:{
					refresh:0,
					style:italic,
					action:"live Gamma"
				}},
				{ SSpacer:{
						height: 1
				    	}},
			`if [ -d "/sys/devices/platform/kcal_ctrl.0" ]; then
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal" ]; then
				KCAL=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal\`;
					$BB echo '{ SPane:{
						title:"KCAL Control",
					}},
						{ SGeneric:{
							title:"KCAL",
							description:"Controls R/G/B Multipliers",
							default:'$KCAL',
							action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal",
						}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_enable" ]; then
				KCALE=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_enable\`;
					$BB echo '{ SCheckBox:{
						label:"KCAL Enable",
						description:"Enables/Disables RGB Multiplier Control",
						default:'$KCALE',
						action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_enable"
					}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_invert" ]; then
				KCALINV=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_invert\`;
					$BB echo '{ SCheckBox:{
						label:"KCAL inverted colors",
						description:"Enables/Disables Display Inversion Mode",
						default:'$KCALINV',
						action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_invert"
					}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_min" ]; then
				KM=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_min\`
						$BB echo '{ SSeekBar:{
							title:"KCAL Min",
							description:"Controls minimum RGB Multiplier value.",
							min:0,
							max:255,
							step:1,
							default:'$KM',
							action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_min"
						}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_cont" ]; then
				KCALCONT=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_cont\`;
					$BB echo '{ SSeekBar:{
						title:"Contrast",
						description:"Controls display contrast.",
						min:128,
						max:383,
						step:1,
						default:'$KCALCONT',
						action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_cont",
					}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_hue" ]; then
				KCALHUE=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_hue\`;
					$BB echo '{ SSeekBar:{
						title:"Hue",
						description:"Controls display hue.",
						min:0,
						max:1536,
						step:1,
						default:'$KCALHUE',
						action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_hue",
					}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_sat" ]; then
				KCALSAT=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_sat\`;
					$BB echo '{ SSeekBar:{
						title:"Saturation",
						description:"Controls saturation intensity. Move slider all the way to the left for grayscale mode.",
						min:128,
						max:383,
						step:1,
						default:'$KCALSAT',
						action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_sat",
					}},'
				fi
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal_val" ]; then
				KCALVAL=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal_val\`;
					$BB echo '{ SSeekBar:{
						title:"Value",
						description:"Controls display value.",
						min:128,
						max:383,
						step:1,
						default:'$KCALVAL',
						action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal_val",
					}},'
				fi
			fi`
			`if [ -f "/sys/devices/platform/mipi_lgit.1537/kgamma_b" ]; then
			PROF=\`$BB cat $UKM/files/gamma_prof\`;
			BLUE=\`$BB cat /sys/devices/platform/mipi_lgit.1537/kgamma_b\`;
			GREEN=\`$BB cat /sys/devices/platform/mipi_lgit.1537/kgamma_g\`;
			RED=\`$BB cat /sys/devices/platform/mipi_lgit.1537/kgamma_r\`;
					$BB echo '{ SGeneric:{
						title:"Blue",
						default:'$BLUE',
						action:"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_b",
					}},
					{ SGeneric:{
						title:"Green",
						default:'$GREEN',
						action:"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_g",
					}},
					{ SGeneric:{
						title:"Red",
						default:'$RED',
						action:"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_r",
					}},
				{ SPane:{
					title:"Gamma Profiles",
					description:"After you apply a profile, turn screen Off/On to update. More custom profiles here: <a href='https://docs.google.com/spreadsheet/ccc?key=0AoDp2qRui0u0dGE4T2gtSDBTRHVFSldPS2RrX1Rya0E#gid=5'>HERE</a>"
				}},
					{ SOptionList:{
						default:"Custom",
						action:"restorebackup applygammafaux",
						values:[ "Custom", '
							for FAUX in \`$UKM/actions/restorebackup listgammafaux\`; do
								echo "\"$FAUX\","
							done;
						$BB echo '],
						notify:[
							{
								on:APPLY,
								do:[ REFRESH, APPLY ],
								to:[
									"gamma '$UKM'/files/gamma_prof",
									"gamma /sys/devices/platform/kcal_ctrl.0/kcal",
									"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_b",
									"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_g",
									"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_r"
								]
							}
						]
					}},
				{ SPane:{
					title:"Gamma Actions",
				}},
					{ SButton:{
						label:"Delete Selected Profile",
						action:"restorebackup deletegammafaux",
						notify:[
							{
								on:APPLY,
								do:[ RESET, APPLY ],
								to:"gamma '$UKM'/files/gamma_prof"
							}
						]
					}},
					{ SGeneric:{
						title:"Profile Name",
						default:"Custom",
						action:"gamma '$UKM'/files/gamma_prof",
					}},
						{ SDescription:{
							description:"First set a name above and apply. After this you can press the Backup Current Profile button below."
						}},
						{ SButton:{
							label:"Backup Current Profile",
							action:"restorebackup keepgammafaux",
							notify:[
								{
									on:APPLY,
									do:[ REFRESH, APPLY ],
									to:"gamma '$UKM'/files/gamma_prof"
								}
							]
						}},
				{ SPane:{
					title:"General Actions",
					description:"To update/refresh lists, select Restart Synapse below."
				}},
					{ SButton:{
						label:"Restart Synapse",
						action:"restorebackup restart"
					}},'
			fi`
			`if [ -f "/sys/class/misc/gammacontrol/brightness" ]; then
			RED_GREYS=\`$BB cat /sys/class/misc/gammacontrol/red_greys\`;
			RED_MIDS=\`$BB cat /sys/class/misc/gammacontrol/red_mids\`;
			RED_BLACKS=\`$BB cat /sys/class/misc/gammacontrol/red_blacks\`;
			RED_WHITES=\`$BB cat /sys/class/misc/gammacontrol/red_whites\`;
			GREEN_GREYS=\`$BB cat /sys/class/misc/gammacontrol/green_greys\`;
			GREEN_MIDS=\`$BB cat /sys/class/misc/gammacontrol/green_mids\`;
			GREEN_BLACKS=\`$BB cat /sys/class/misc/gammacontrol/green_blacks\`;
			GREEN_WHITES=\`$BB cat /sys/class/misc/gammacontrol/green_whites\`;
			BLUE_GREYS=\`$BB cat /sys/class/misc/gammacontrol/blue_greys\`;
			BLUE_MIDS=\`$BB cat /sys/class/misc/gammacontrol/blue_mids\`;
			BLUE_BLACKS=\`$BB cat /sys/class/misc/gammacontrol/blue_blacks\`;
			BLUE_WHITES=\`$BB cat /sys/class/misc/gammacontrol/blue_whites\`;
			CONTRAST=\`$BB cat /sys/class/misc/gammacontrol/contrast\`;
			BRIGHTNESS=\`$BB cat /sys/class/misc/gammacontrol/brightness\`;
			SATURATION=\`$BB cat /sys/class/misc/gammacontrol/saturation\`;
				$BB echo '{ SGeneric:{
							title:"Red Greys",
							default:'$RED_GREYS',
							action:"gamma /sys/class/misc/gammacontrol/red_greys",
						}},
						{ SGeneric:{
							title:"Red Mids",
							default:'$RED_MIDS',
							action:"gamma /sys/class/misc/gammacontrol/red_mids",
						}},
						{ SGeneric:{
							title:"Red Blacks",
							default:'$RED_BLACKS',
							action:"gamma /sys/class/misc/gammacontrol/red_blacks",
						}},
						{ SGeneric:{
							title:"Red Whites",
							default:'$RED_WHITES',
							action:"gamma /sys/class/misc/gammacontrol/red_whites",
						}},
						{ SGeneric:{
							title:"Green Greys",
							default:'$GREEN_GREYS',
							action:"gamma /sys/class/misc/gammacontrol/green_greys",
						}},
						{ SGeneric:{
							title:"Green Mids",
							default:'$GREEN_MIDS',
							action:"gamma /sys/class/misc/gammacontrol/green_mids",
						}},
						{ SGeneric:{
							title:"Green Blacks",
							default:'$GREEN_BLACKS',
							action:"gamma /sys/class/misc/gammacontrol/green_blacks",
						}},
						{ SGeneric:{
							title:"Green Whites",
							default:'$GREEN_WHITES',
							action:"gamma /sys/class/misc/gammacontrol/green_whites",
						}},
						{ SGeneric:{
							title:"Blue Greys",
							default:'$BLUE_GREYS',
							action:"gamma /sys/class/misc/gammacontrol/blue_greys",
						}},
						{ SGeneric:{
							title:"Blue Mids",
							default:'$BLUE_MIDS',
							action:"gamma /sys/class/misc/gammacontrol/blue_mids",
						}},
						{ SGeneric:{
							title:"Blue Blacks",
							default:'$BLUE_BLACKS',
							action:"gamma /sys/class/misc/gammacontrol/blue_blacks",
						}},
						{ SGeneric:{
							title:"Blue Whites",
							default:'$BLUE_WHITES',
							action:"gamma /sys/class/misc/gammacontrol/blue_whites",
						}},
						{ SGeneric:{
							title:"Contrast",
							default:'$CONTRAST',
							action:"gamma /sys/class/misc/gammacontrol/contrast",
						}},
						{ SGeneric:{
							title:"Brightness",
							default:'$BRIGHTNESS',
							action:"gamma /sys/class/misc/gammacontrol/brightness",
						}},
						{ SGeneric:{
							title:"Saturation",
							default:'$SATURATION',
							action:"gamma /sys/class/misc/gammacontrol/saturation",
						}},
				{ SPane:{
					title:"Gamma Profiles",
					description:"After you apply a profile, turn screen Off/On to update. More custom profiles here: <a href='https://docs.google.com/spreadsheet/ccc?key=0AoDp2qRui0u0dGE4T2gtSDBTRHVFSldPS2RrX1Rya0E#gid=6'>HERE</a>"
				}},
					{ SOptionList:{
						default:"Custom",
						action:"restorebackup applygammafranco",
						values:[ "Custom", '
							for FRANCO in \`$UKM/actions/restorebackup listgammafranco\`; do
								echo "\"$FRANCO\","
							done;
						$BB echo '],
						notify:[
							{
								on:APPLY,
								do:[ REFRESH, APPLY ],
								to:[
									"gamma '$UKM'/files/gamma_prof",
									"gamma /sys/devices/platform/kcal_ctrl.0/kcal",
									"gamma /sys/class/misc/gammacontrol/red_greys",
									"gamma /sys/class/misc/gammacontrol/red_mids",
									"gamma /sys/class/misc/gammacontrol/red_blacks",
									"gamma /sys/class/misc/gammacontrol/red_whites",
									"gamma /sys/class/misc/gammacontrol/green_greys",
									"gamma /sys/class/misc/gammacontrol/green_mids",
									"gamma /sys/class/misc/gammacontrol/green_blacks",
									"gamma /sys/class/misc/gammacontrol/green_whites",
									"gamma /sys/class/misc/gammacontrol/blue_greys",
									"gamma /sys/class/misc/gammacontrol/blue_mids",
									"gamma /sys/class/misc/gammacontrol/blue_blacks",
									"gamma /sys/class/misc/gammacontrol/blue_whites",
									"gamma /sys/class/misc/gammacontrol/contrast",
									"gamma /sys/class/misc/gammacontrol/brightness",
									"gamma /sys/class/misc/gammacontrol/saturation"
								]
							}
						]
					}},
				{ SPane:{
					title:"Gamma Actions",
				}},
					{ SButton:{
						label:"Delete Selected Profile",
						action:"restorebackup deletegammafranco",
						notify:[
							{
								on:APPLY,
								do:[ RESET, APPLY ],
								to:"gamma '$UKM'/files/gamma_prof"
							}
						]
					}},
					{ SGeneric:{
						title:"Profile Name",
						default:"Custom",
						action:"gamma '$UKM'/files/gamma_prof",
					}},
						{ SDescription:{
							description:"First set a name above and apply. After this you can press the Backup Current Profile button below."
						}},
						{ SButton:{
							label:"Backup Current Profile",
							action:"restorebackup keepgammafranco",
							notify:[
								{
									on:APPLY,
									do:[ REFRESH, APPLY ],
									to:"gamma '$UKM'/files/gamma_prof"
								}
							]
						}},
				{ SPane:{
					title:"General Actions",
					description:"To update/refresh lists, select Restart Synapse below."
				}},
					{ SButton:{
						label:"Restart Synapse",
						action:"restorebackup restart"
					}},'
			fi`
			`if [ -f "/sys/devices/platform/mipi_lgit.1537/kgamma_blue" ] && [ ! -f "/sys/devices/platform/mipi_lgit.1537/kgamma_b" ]; then
			BLUE=\`$BB cat /sys/devices/platform/mipi_lgit.1537/kgamma_blue\`;
			GREEN=\`$BB cat /sys/devices/platform/mipi_lgit.1537/kgamma_green\`;
			RED=\`$BB cat /sys/devices/platform/mipi_lgit.1537/kgamma_red\`;
				$BB echo '{ SGeneric:{
							title:"Blue",
							default:'$BLUE',
							action:"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_blue",
						}},
						{ SGeneric:{
							title:"Green",
							default:'$GREEN',
							action:"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_green",
						}},
						{ SGeneric:{
							title:"Red",
							default:'$RED',
							action:"gamma /sys/devices/platform/mipi_lgit.1537/kgamma_red",
						}},'
			fi`
			`if [ -f "/sys/module/dsi_panel/kgamma_bn" ]; then
			KGAMMA_BN=\`$BB cat /sys/module/dsi_panel/kgamma_bn\`;
			KGAMMA_BP=\`$BB cat /sys/module/dsi_panel/kgamma_bp\`;
			KGAMMA_GN=\`$BB cat /sys/module/dsi_panel/kgamma_gn\`;
			KGAMMA_GP=\`$BB cat /sys/module/dsi_panel/kgamma_gp\`;
			KGAMMA_RN=\`$BB cat /sys/module/dsi_panel/kgamma_rn\`;
			KGAMMA_RP=\`$BB cat /sys/module/dsi_panel/kgamma_rp\`;
			KGAMMA_W=\`$BB cat /sys/module/dsi_panel/kgamma_w\`;
				$BB echo '{ SGeneric:{
						title:"Blue Negative",
						default:'$KGAMMA_BN',
						action:"gamma /sys/module/dsi_panel/kgamma_bn",
					}},
					{ SGeneric:{
						title:"Blue Positive",
						default:'$KGAMMA_BP',
						action:"gamma /sys/module/dsi_panel/kgamma_bp",
					}},
					{ SGeneric:{
						title:"Green Negative",
						default:'$KGAMMA_GN',
						action:"gamma /sys/module/dsi_panel/kgamma_gn",
					}},
					{ SGeneric:{
						title:"Green Positive",
						default:'$KGAMMA_GP',
						action:"gamma /sys/module/dsi_panel/kgamma_gp",
					}},
					{ SGeneric:{
						title:"Red Negative",
						default:'$KGAMMA_RN',
						action:"gamma /sys/module/dsi_panel/kgamma_rn",
					}},
					{ SGeneric:{
						title:"Red Positive",
						default:'$KGAMMA_RP',
						action:"gamma /sys/module/dsi_panel/kgamma_rp",
					}},
					{ SGeneric:{
						title:"White Point",
						default:'$KGAMMA_W',
						action:"gamma /sys/module/dsi_panel/kgamma_w",
					}},
				{ SPane:{
					title:"Gamma Profiles",
					description:"After you apply a profile, turn screen Off/On to update."
				}},
					{ SOptionList:{
						default:"Custom",
						action:"restorebackup applygammafrancoN5",
						values:[ "Custom", '
							for FRANCON5 in \`$UKM/actions/restorebackup listgammafrancoN5\`; do
								echo "\"$FRANCON5\","
							done;
						$BB echo '],
						notify:[
							{
								on:APPLY,
								do:[ REFRESH, APPLY ],
								to:[
									"gamma '$UKM'/files/gamma_prof",
									"gamma /sys/module/dsi_panel/kgamma_bn",
									"gamma /sys/module/dsi_panel/kgamma_bp",
									"gamma /sys/module/dsi_panel/kgamma_gn",
									"gamma /sys/module/dsi_panel/kgamma_gp",
									"gamma /sys/module/dsi_panel/kgamma_rn",
									"gamma /sys/module/dsi_panel/kgamma_rp",
									"gamma /sys/module/dsi_panel/kgamma_w"
								]
							}
						]
					}},
				{ SPane:{
					title:"Gamma Actions",
				}},
					{ SButton:{
						label:"Delete Selected Profile",
						action:"restorebackup deletegammafrancoN5",
						notify:[
							{
								on:APPLY,
								do:[ RESET, APPLY ],
								to:"gamma '$UKM'/files/gamma_prof"
							}
						]
					}},
					{ SGeneric:{
						title:"Profile Name",
						default:"Custom",
						action:"gamma '$UKM'/files/gamma_prof",
					}},
						{ SDescription:{
							description:"First set a name above and apply. After this you can press the Backup Current Profile button below."
						}},
						{ SButton:{
							label:"Backup Current Profile",
							action:"restorebackup keepgammafrancoN5",
							notify:[
								{
									on:APPLY,
									do:[ REFRESH, APPLY ],
									to:"gamma '$UKM'/files/gamma_prof"
								}
							]
						}},
				{ SPane:{
					title:"General Actions",
					description:"To update/refresh lists, select Restart Synapse below."
				}},
					{ SButton:{
						label:"Restart Synapse",
						action:"restorebackup restart"
					}},'
			fi`

			`if [ -d "/sys/devices/virtual/graphics/fb0" ]; then
				if [ -f "/sys/devices/virtual/graphics/fb0/sre" ]; then
				SRE=\`$BB cat /sys/devices/virtual/graphics/fb0/sre\`
						$BB echo '{ SSeekBar:{
							title:"SRE Control Interface",
							description:"Sunlight Readability Enhancement (0 disabled - 1 = Low / 2 = Medium / 3 = Strong ).",
							min:0,
							max:3,
							step:1,
							default:'$SRE',
							action:"generic /sys/devices/virtual/graphics/fb0/sre"
						}},'
				fi
				if [ -f "/sys/devices/virtual/graphics/fb0/cabc" ]; then
				CABC=\`$BB cat /sys/devices/virtual/graphics/fb0/cabc\`
						$BB echo '{ SSeekBar:{
							title:"CABC Control Interface",
							description:"Content Adaptive Backlight Control (0 disabled - 1 = Ui Mode / 2 = Image Mode / 3 = Video Mode ).",
							min:0,
							max:3,
							step:1,
							default:'$CABC',
							action:"generic /sys/devices/virtual/graphics/fb0/cabc"
						}},'
				fi
				if [ -f "/sys/module/mdss_fb/parameters/backlight_min" ]; then
				BMIN=\`$BB cat /sys/module/mdss_fb/parameters/backlight_min\`
				    $BB echo '{ SPane:{
					    title:"Boeffla Backlight Control",
				    }},
                        { SSeekBar:{
							description:"Minimum Backlight Level",
							min:0,
							max:255,
							step:1,
							default:'$BMIN',
							action:"generic /sys/module/mdss_fb/parameters/backlight_min"
						}},'
				fi
				if [ -f "/sys/module/mdss_fb/parameters/backlight_max" ]; then
				BMAX=\`$BB cat /sys/module/mdss_fb/parameters/backlight_max\`
				    $BB echo '{ SSeekBar:{
							    description:"Maximum Backlight Level",
							    min:0,
							    max:255,
							    step:1,
							    default:'$BMAX',
							    action:"generic /sys/module/mdss_fb/parameters/backlight_max"
						  }},'
				fi
				if [ -f "/sys/devices/virtual/graphics/fb0/mdss_fb/leds/lcd-backlight/max_brightness" ]; then
				BMAX=\`$BB cat /sys/devices/virtual/graphics/fb0/mdss_fb/leds/lcd-backlight/max_brightness\`
				    $BB echo '{ SSeekBar:{
                                title:"Backlight Brightnes Control",
							    description:"Allows to set maximum display backlight level",
							    unit:" %",
							    default:'$BMAX',
							    action:"generic /sys/devices/virtual/graphics/fb0/mdss_fb/leds/lcd-backlight/max_brightness",
						        values:{
							        25:"10 %",50:"20 %",75:"30 %",100:"40 %",125:"50 %",150:"60 %",175:"70 %",200:"80 %",225:"90 %",255:"100 %",
						        }
						  }},'
				fi
				if [ -f "/sys/devices/virtual/graphics/fb0/color_enhance" ]; then
				CE=\`$BB cat /sys/devices/virtual/graphics/fb0/color_enhance\`;
					$BB echo '{ SCheckBox:{
						label:"Color enhancement",
						default:'$CE',
						action:"generic /sys/devices/virtual/graphics/fb0/color_enhance"
					}},'
				fi
				if [ -f "/sys/devices/virtual/graphics/fb0/aco" ]; then
				ACO=\`$BB cat /sys/devices/virtual/graphics/fb0/aco\`;
					$BB echo '{ SCheckBox:{
						label:"Automatic Contrast Optimization",
						default:'$ACO',
						action:"generic /sys/devices/virtual/graphics/fb0/aco"
					}},'
				fi
			fi`
			`if [ -f "/sys/module/mdss_fb/parameters/backlight_dimmer" ]; then
			MHH=\`bool /sys/module/mdss_fb/parameters/backlight_dimmer\`;
				$BB echo '{ SPane:{
					title:"Backlight Dimmer",
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"Enable/Disable backlight dimmer.",
						default:'$MHH',
						action:"boolean /sys/module/mdss_fb/parameters/backlight_dimmer"
					}},'
			fi`
            `if [ -f "/sys/devices/virtual/graphics/fb0/dci_p3" ]; then
			FSYNC=\`$BB cat /sys/devices/virtual/graphics/fb0/dci_p3\`
				$BB echo '{ SPane:{
					title:"DCI P3 Mode"
				}},
					{ SCheckBox:{
						description:"Oneplus 3t DCI_P3 Display Calibration",
						label:"Enable",
						default:'$FSYNC',
						action:"generic /sys/devices/virtual/graphics/fb0/dci_p3"
					}},'
			fi`
            `if [ -f "/sys/devices/virtual/graphics/fb0/DCI_P3" ]; then
			FSYNC=\`$BB cat /sys/devices/virtual/graphics/fb0/DCI_P3\`
				$BB echo '{ SPane:{
					title:"DCI P3 Mode"
				}},
					{ SCheckBox:{
						description:"Oneplus 3t DCI_P3 Display Calibration",
						label:"Enable",
						default:'$FSYNC',
						action:"generic /sys/devices/virtual/graphics/fb0/DCI_P3"
					}},'
			fi`
            `if [ -f "/sys/devices/virtual/graphics/fb0/SRGB" ]; then
			FSYNC=\`$BB cat /sys/devices/virtual/graphics/fb0/SRGB\`
				$BB echo '{ SPane:{
					title:"SRGB Mode"
				}},
					{ SCheckBox:{
						description:"SRGB Display Calibration",
						label:"Enable",
						default:'$FSYNC',
						action:"generic /sys/devices/virtual/graphics/fb0/SRGB"
					}},'
			fi`
            `if [ -f "/sys/devices/virtual/graphics/fb0/srgb" ]; then
			FSYNC=\`$BB cat /sys/devices/virtual/graphics/fb0/srgb\`
				$BB echo '{ SPane:{
					title:"SRGB Mode"
				}},
					{ SCheckBox:{
						description:"SRGB Display Calibration",
						label:"Enable",
						default:'$FSYNC',
						action:"generic /sys/devices/virtual/graphics/fb0/srgb"
					}},'
			fi`
            `if [ -f "/sys/devices/virtual/graphics/fb0/Adobe_RGB" ]; then
			FSYNC=\`$BB cat /sys/devices/virtual/graphics/fb0/Adobe_RGB\`
				$BB echo '{ SPane:{
					title:"Adobe RGB Mode"
				}},
					{ SCheckBox:{
						description:"Oneplus 3t Adobe_RGB Display Calibration",
						label:"Enable",
						default:'$FSYNC',
						action:"generic /sys/devices/virtual/graphics/fb0/Adobe_RGB"
					}},'
			fi`
            `if [ -f "/sys/class/mdnie/mdnie/bypass" ]; then
			RGBS=\`$BB cat /sys/class/mdnie/mdnie/bypass\`
				$BB echo '{ SPane:{
					title:"Disable Samsung RGB Mode"
				}},
					{ SCheckBox:{
						description:"Disable Samsung RGB Display Calibration. Need for custom RGB control",
						label:"Enable",
						default:'$RGBS',
						action:"generic /sys/class/mdnie/mdnie/bypass"
					}},'
			fi`
			`if [ -f "/sys/class/mdnie/mdnie/rgb" ]; then
			RGBC=\`$BB cat /sys/class/mdnie/mdnie/rgb\`;
				$BB echo '{ SPane:{
					title:"RGB Color Control",
				}},
					{ SGeneric:{
						title:"MDNIE",
						description:"Controls R/G/B Multipliers",
						default:'$RGBC',
						action:"gamma /sys/class/mdnie/mdnie/rgb",
					}},'
			fi`
            `if [ -f "/sys/class/mdnie/mdnie/hdr" ]; then
			FSYNC=\`$BB cat /sys/class/mdnie/mdnie/hdr\`
				$BB echo '{ SPane:{
					title:"Panel HDR Mode"
				}},
					{ SCheckBox:{
						description:"Improves the range of color and contrast in a digital image.",
						label:"Enable",
						default:'$FSYNC',
						action:"generic /sys/class/mdnie/mdnie/bypass"
					}},'
			fi`
		]
}
CTAG
