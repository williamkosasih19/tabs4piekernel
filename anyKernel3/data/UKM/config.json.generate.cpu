cat << CTAG
{
	name:CPU 1,
		elements:[
			{ SPane:{
				title:"Info"
			}},
				{ SDescription:{
					description:"CPU frequency scaling enables the operating system to scale the CPU frequency up or down in order to save power."
				}},
				{ SSpacer:{
						height: 1
				    	}},
				{ SLiveLabel:{
						refresh:0,
						style:italic,
						action:"live CPU"
					}},
				{ SSpacer:{
						height: 1
				    	}},
				{ SPane:{
						title:"Live Cpu Frequency"
					}},
				{ SSpacer:{
						height: 1
				    	}},
				{ SLiveLabel:{
						refresh:400,
						style:italic,
						action:"live CPUFrequency"
					}},
				{ SSpacer:{
						height: 1
				    	}},
				{ STitleBar:{
						title:"CPU Frequency Scaling"
				}},
				`if [ -f "/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies" ]; then
					$BB echo '{ SSpacer:{
						height: 1
					}},'
					$BB echo '{ SSeekBar:{
						title:"CPU Min Scaling Frequency",
						description:"Set the minimum frequency the CPU scales down to.",
						default:'\`sh $DEVICE DefaultCPUMinFrequency\`',
						action:"cpuset '\`sh $DEVICE DirCPUMinFrequency\`'",
						values:{'
							sh $DEVICE CPUFrequencyList
						$BB echo }'
					}},'
					$BB echo '{ SSeekBar:{
						title:"CPU Max Scaling Frequency",
						description:"Set the maximum frequency the CPU scales up to.",
						default:'\`sh $DEVICE DefaultCPUMaxFrequency\`',
						action:"cpuset '\`sh $DEVICE DirCPUMaxFrequency\`'",
						values:{'
							sh $DEVICE CPUFrequencyList
						$BB echo }'
					}},'
				fi`
				`if [ -d "/sys/module/clock_cpu_8996" ]; then
				$BB echo '{ SPane:{
					title:"Core Control"
				}},'
                                    if [ -d "/sys/module/clock_cpu_8996" ]; then
                                            CPU0=\`$BB cat /sys/devices/system/cpu/cpu0/online\`
                                            $BB echo '{ SCheckBox:{
                                                    label:"CPU0 Enabled",
                                                    description:"Allow to disable CPU0.",
                                                    default:'$CPU0',
                                                    action:"generic /sys/devices/system/cpu/cpu0/online"
                                    }},'
                                    fi
                                    if [ -d "/sys/module/clock_cpu_8996" ]; then
                                            CPU1=\`$BB cat /sys/devices/system/cpu/cpu1/online\`
                                            $BB echo '{ SCheckBox:{
                                                    label:"CPU1 Enabled",
                                                    description:"Allow to disable CPU1.",
                                                    default:'$CPU1',
                                                    action:"generic /sys/devices/system/cpu/cpu1/online"
                                    }},'
                                    fi
                                fi`
				{ SSpacer:{
						height: 1
				}},
			{ SPane:{
				title:"CPU Governor Tunables",
			}},
				`if [ -f "/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies" ]; then
					$BB echo '{ SSpacer:{
						height: 2
					}},
					{ SLiveLabel:{
						refresh:0,
						style:italic,
						action:"live CPU"
					}},
					{ SSpacer:{
						height: 1
					}},
					{ SOptionList:{
						default:'\`sh $DEVICE DefaultCPUGovernor\`',
						action:"cpuset '\`sh $DEVICE DirCPUGovernor\`'",
						values:['
							sh $DEVICE CPUGovernorList
						$BB echo '],
						notify:[
							{
								on:APPLY,
								do:[ REFRESH, CANCEL ],
								to:"'\`sh $DEVICE DirCPU1GovernorTree\`'"
							},
							{
								on:REFRESH,
								do:REFRESH,
								to:"'\`sh $DEVICE DirCPU1GovernorTree\`'"
							}
						]
					}},'
				fi`
				{ STreeDescriptor:{
					path:"`sh $DEVICE DirCPU1GovernorTree`",
					generic: {
						directory: {
							STreeDescriptor:{
								generic: {
									directory: {},
									element: {
										SGeneric: { title:"@BASENAME" }
									}
								},
								exclude: [ 
									"boost_duration", "boostpulse", "cpu_utilization", "multi_phase_freq_tbl", "profile", "profile_list", "sampling_rate_min", 
									"up_threshold_h", "up_threshold_l", "version_profiles"
								]
							},
						}
					},
					exclude: [ "all_cpus", "kset", "overall_stats", "stats", "vdd_table" ]
				}},
		]
}
CTAG
